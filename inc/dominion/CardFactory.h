//=============================================================================
/// @class CardFactory
/// @brief カードファクトリー　カードの生成を少し隠す
/// @author ide
/// @since 14/02/20
/// @version $Revision$
/// 最終更新者 : $Author$<BR>
/// 
/// 
/// <H2>更新履歴</H2>
// @author 
// @data 
// 
// @todo 
// @bug 
// @defgroup 
// @ingroup 
//=============================================================================
#ifndef DOMINION_CARD_FACTORY_H
#define DOMINION_CARD_FACTORY_H
//-----------------------------------------------------------------------------
// include files
//-----------------------------------------------------------------------------
#include "dominion/Card.h"
#include <map>
//-----------------------------------------------------------------------------
// class
//-----------------------------------------------------------------------------
namespace dominion {
    class CardFactory {
    public:
        //---------------------------------------------------------------------
        /// @brief インスタンスの生成
        /// @return true:成功 false:失敗
        //---------------------------------------------------------------------
        static void createInstance(void);
        //---------------------------------------------------------------------
        /// @brief インスタンスの削除
        //---------------------------------------------------------------------
        static void deleteInstance(void);
        //---------------------------------------------------------------------
        /// @brief インスタンスの取得
        /// @return インスタンス
        //---------------------------------------------------------------------
        static CardFactory *getInstance(void);
        //---------------------------------------------------------------------
        /// @brief カードの作成
        /// @param cardName カード名
        /// @return カードのポインタ　失敗するとNULL
        //---------------------------------------------------------------------
        Card *createCard(const char *cardEffectName);
        //---------------------------------------------------------------------
        /// @brief カード効果の追加
        /// @param cardEffect カード効果
        //---------------------------------------------------------------------
        void addCardEffect(CardEffect *cardEffect);
    private:
        CardFactory(void);
        ~CardFactory(void);
        std::map <std::string, CardEffect *> mEffects;
    };
}
#endif
//-----------------------------------------------------------------------------
// End Of File
//-----------------------------------------------------------------------------
